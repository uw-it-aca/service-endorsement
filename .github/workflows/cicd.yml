name: build-test-deploy-containerized-python-app

env:
  RELEASE_NAME: "prt"
  DJANGO_APP: "endorsement"
  COMMIT_HASH: "$(git rev-parse --short=7 ${GITHUB_SHA})"
  IMAGE_TAG: "${{ env.RELEASE_NAME }}:${{ env.COMMIT_HASH }}"

on:
  push:
    branches:
      - feature/github-actions

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build App Image ${{ env.IMAGE_TAG }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ./
          file: 
          target: app-container
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build Test Image
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: app-test-container
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Prep Test Tooling
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
          run: |
            python -m pip install --upgrade pip
            pip install coverage
            pip install coveralls

      - name: Run Tests in Test Image
        uses: addnab/docker-run-action@v2
        with:
          image: app-test-container
          shell: bash
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          options: -u root -it -v /tmp:/coverage -e DJANGO_APP="$DJANGO_APP" -e "ENV=localdev" -e "AUTH=SAML_MOCK"
          run: |
            ./docker/test.sh

      - name: Record Test Results
        shell: bash
        run: |
          cp /tmp/.coverage.* .
          coverage combine
          coveralls

#      - name: Deploy
#        if: github.event.pull_request.merged == true
#        env:
#          DEPLOY_SCRIPT_BASE: https://raw.githubusercontent.com/uw-it-aca/gcp-app-deploy/
#          DEPLOY_SCRIPT_BRANCH: master
#          DEPLOY_SCRIPT: ${DEPLOY_SCRIPT_BASE}/${DEPLOY_SCRIPT_BRANCH}/travis-ci/deploy.sh
#          GCP_JSON_KEY=gcp.json
#        run: |
#          curl -Ls "$DEPLOY_SCRIPT" | bash
