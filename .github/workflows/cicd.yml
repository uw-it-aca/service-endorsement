---
name: build-test-deploy-containerized-python-app

env:
  RELEASE_NAME: prt
  DJANGO_APP: endorsement
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - feature/github-actions

jobs:
  pipeline:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Set commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Set image tag
        run: >-
          echo "IMAGE_TAG=${{ env.RELEASE_NAME }}:${{ env.COMMIT_HASH }}"
          >> $GITHUB_ENV

      - name: Build App and Test Images
        id: docker_build
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true
          docker build --target app-container -t "${{ env.IMAGE_TAG }}" --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache .
          docker tag "${{ env.IMAGE_TAG }}" docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true
          docker build --target app-test-container -t app-test-container --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache .

      - name: Install test tooling
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install coveralls

      - name: Run Tests
        shell: bash
        run: >-
          docker run -u root -t
          -v /tmp:/coverage
          -e DJANGO_APP="${{ env.DJANGO_APP }}"
          -e "ENV=localdev" -e "AUTH=SAML_MOCK"
          app-test-container
          bash -c ". ./docker/test.sh"

      - name: Record Test Results
        shell: bash
        run: |
          cp /tmp/.coverage.* .
          coverage combine
          coveralls
