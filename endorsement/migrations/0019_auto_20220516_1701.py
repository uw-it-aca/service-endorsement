# Generated by Django 3.2.13 on 2022-05-17 00:01

from django.db import migrations, models
import django.db.models.deletion
import django_prometheus.models


class Migration(migrations.Migration):

    dependencies = [
        ('endorsement', '0018_auto_20210623_2019'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('netid', models.SlugField(max_length=32, unique=True)),
                ('display_name', models.CharField(max_length=256, null=True)),
                ('regid', models.CharField(db_index=True, max_length=32, unique=True)),
                ('is_valid', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'uw_service_endorsement_accessee',
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('accessee'), models.Model),
        ),
        migrations.CreateModel(
            name='Accessor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=64, unique=True)),
                ('display_name', models.CharField(max_length=256, null=True)),
                ('is_valid', models.BooleanField(default=False)),
                ('is_shared_netid', models.BooleanField(null=True)),
                ('is_group', models.BooleanField(null=True)),
            ],
            options={
                'db_table': 'uw_service_endorsement_accessor',
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('accessor'), models.Model),
        ),
        migrations.AlterField(
            model_name='endorsee',
            name='is_person',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='endorsee',
            name='kerberos_active_permitted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='endorsementrecord',
            name='category_code',
            field=models.SmallIntegerField(choices=[(235, 'UW Office 365'), (234, 'UW Google'), (236, 'Canvas and Panopto'), (237, 'UW Zoom Licensed'), (238, 'UW Zoom Basic'), (239, 'Husky OnNet for Affiliates')]),
        ),
        migrations.AlterField(
            model_name='endorsementrecord',
            name='is_deleted',
            field=models.BooleanField(null=True),
        ),
        migrations.AlterField(
            model_name='endorser',
            name='is_valid',
            field=models.BooleanField(null=True),
        ),
        migrations.CreateModel(
            name='AccessRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('right_id', models.SmallIntegerField()),
                ('right_name', models.SlugField(max_length=64, null=True)),
                ('acted_as', models.SlugField(max_length=32, null=True)),
                ('datetime_created', models.DateTimeField(null=True)),
                ('datetime_emailed', models.DateTimeField(null=True)),
                ('datetime_notice_1_emailed', models.DateTimeField(null=True)),
                ('datetime_notice_2_emailed', models.DateTimeField(null=True)),
                ('datetime_notice_3_emailed', models.DateTimeField(null=True)),
                ('datetime_notice_4_emailed', models.DateTimeField(null=True)),
                ('datetime_granted', models.DateTimeField(null=True)),
                ('datetime_renewed', models.DateTimeField(null=True)),
                ('datetime_expired', models.DateTimeField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('accessee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='endorsement.accessee')),
                ('accessor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='endorsement.accessor')),
            ],
            options={
                'db_table': 'uw_service_endorsement_access',
                'unique_together': {('accessor', 'accessee')},
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('access_record'), models.Model),
        ),
    ]
